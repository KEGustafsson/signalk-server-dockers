name: Build Docker base container 24.04 amd64, arm64 and arm32 parallel

on:
  schedule:
    - cron: "0 0 * * 1"
  workflow_dispatch:

jobs:
  build-arm64:
    runs-on: ubuntu-24.04-arm

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build baseimages
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile_base_24.04
          platforms: linux/arm64
          push: true
          tags: |
            ghcr.io/kegustafsson/signalk-server-base:arm64-24.04
            kgustafs/signalk-server-base:arm64-24.04

      - name: Modify Dockerfile_rel_24.04 for testing
        run: |
          sed -i 's/:latest-24.04/:arm64-24.04/g' ./docker/Dockerfile_rel_24.04

      - name: Build Signal K test docker for amr64
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile_rel_24.04
          platforms: linux/arm64
          build-args: |
            TAG=latest

  build-armv7:
    runs-on: ubuntu-24.04-arm

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build baseimages
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile_base_24.04
          platforms: linux/arm/v7
          push: true
          tags: |
            ghcr.io/kegustafsson/signalk-server-base:armv7-24.04
            kgustafs/signalk-server-base:armv7-24.04
  
      - name: Modify Dockerfile_rel_24.04 for testing
        run: |
          sed -i 's/:latest-24.04/:armv7-24.04/g' ./docker/Dockerfile_rel_24.04

      - name: Build Signal K test docker for amrv7
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile_rel_24.04
          platforms: linux/arm/v7
          build-args: |
            TAG=latest

  build-amd64:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build baseimages
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile_base_24.04
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/kegustafsson/signalk-server-base:amd64-24.04
            kgustafs/signalk-server-base:amd64-24.04
            
      - name: Modify Dockerfile_rel_24.04 for testing
        run: |
          sed -i 's/:latest-24.04/:amd64-24.04/g' ./docker/Dockerfile_rel_24.04

      - name: Build Signal K test docker for amd64
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile_rel_24.04
          platforms: linux/amd64
          build-args: |
            TAG=latest

  create-and-push-manifest:
    needs: [build-arm64, build-armv7, build-amd64]
    runs-on: ubuntu-latest

    steps:	
      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Create and push multi-arch manifest to GHCR and Docker Hub
        uses: int128/docker-manifest-create-action@v2
        with:
          tags: |
            ghcr.io/kegustafsson/signalk-server-base:latest-24.04
            kgustafs/signalk-server-base:latest-24.04
          sources: |
            ghcr.io/kegustafsson/signalk-server-base:amd64-24.04
            ghcr.io/kegustafsson/signalk-server-base:arm64-24.04
            ghcr.io/kegustafsson/signalk-server-base:armv7-24.04
            kgustafs/signalk-server-base:amd64-24.04			
            kgustafs/signalk-server-base:arm64-24.04
            kgustafs/signalk-server-base:armv7-24.04

  housekeeping:
    needs: create-and-push-manifest
    runs-on: ubuntu-latest
    
    steps:	
      - name: Delete Docker Hub Tag
        env:
          IMAGE_NAME: "kgustafs/signalk-server-base"
          TAG1: "amd64-24.04"
          TAG2: "arm64-24.04"
          TAG3: "armv7-24.04"
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          TOKEN=$(curl -s -H "Content-Type: application/json" -X POST \
            -d '{"username": "${{ secrets.DOCKER_HUB_USERNAME }}", "password": "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"}' \
            https://hub.docker.com/v2/users/login/ | jq -r .token)
          curl -X DELETE \
            -H "Authorization: JWT $TOKEN" \
            "https://hub.docker.com/v2/repositories/$IMAGE_NAME/tags/$TAG1/"
          curl -X DELETE \
            -H "Authorization: JWT $TOKEN" \
            "https://hub.docker.com/v2/repositories/$IMAGE_NAME/tags/$TAG2/"
          curl -X DELETE \
            -H "Authorization: JWT $TOKEN" \
            "https://hub.docker.com/v2/repositories/$IMAGE_NAME/tags/$TAG3/"
            
      - name: Remove Docker Image from GHCR
        uses: dataaxiom/ghcr-cleanup-action@v1
        with:
          packages: signalk-server-base
          delete-untagged: true
          delete-tags: amd64-24.04,arm64-24.04,armv7-24.04
          token: ${{ secrets.GHCR_TOKEN_NEW }}

  slack:
    runs-on: ubuntu-latest
    needs: housekeeping
    steps:
      - name: Slack notification
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Ubuntu 24.04 base image built"}' https://hooks.slack.com/services/${{ secrets.SLACK }}
